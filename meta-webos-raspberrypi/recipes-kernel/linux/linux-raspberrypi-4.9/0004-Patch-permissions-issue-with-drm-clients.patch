From 1800759a6808d4fa59ca2af589a7bc5cb218dd3d Mon Sep 17 00:00:00 2001
From: Soumya Aithal <soumya_aithal@hotmail.com>
Date: Wed, 13 Sep 2017 16:10:43 -0700
Subject: [PATCH] Patch permissions issue with drm clients

:Release Notes:
Fixed issue regarding unable to launch webapps if avoutputd started
before surface manager.

:Detailed Notes:
This patch allows a second service to acquire drm master status so
it can authenticate legacy wayland clients which rely on magic token
exchange for gpu access. Newer clients supposedly open render nodes
and do not need to be authenticated.

:Testing Performed:
Ensured that build passes

:QA Notes:

:Issues Addressed:
[PLAT-45032] Investigate app launching issue when avoutputd is
    started before surface manager
---
 drivers/gpu/drm/drm_auth.c | 9 +++++++++
 drivers/gpu/drm/master     | 0
 2 files changed, 9 insertions(+)
 create mode 100644 drivers/gpu/drm/master

diff --git a/drivers/gpu/drm/drm_auth.c b/drivers/gpu/drm/drm_auth.c
index 6b14351..840ca50 100644
--- a/drivers/gpu/drm/drm_auth.c
+++ b/drivers/gpu/drm/drm_auth.c
@@ -174,10 +174,19 @@ int drm_setmaster_ioctl(struct drm_device *dev, void *data,
 	if (drm_is_current_master(file_priv))
 		goto out_unlock;
 
+   /*
+	Comment out check for master here, because we need multiple 
+	components(avoutput, surface-manger/compositor to have priviliges
+	of master and authenticated = true. Commenting out this section allows 
+	surface manager to get a list of clients for wayland/drm auth magic
+	handshake. If and when wayland clients start using render nodes this
+	change will not be necessary.
+
 	if (dev->master) {
 		ret = -EINVAL;
 		goto out_unlock;
 	}
+	*/
 
 	if (!file_priv->master) {
 		ret = -EINVAL;
diff --git a/drivers/gpu/drm/master b/drivers/gpu/drm/master
new file mode 100644
index 0000000..e69de29
-- 
1.9.1

