From 711f2a87972649a041eef077c4b090739a04335a Mon Sep 17 00:00:00 2001
From: Soumya Aithal <soumya.aithal@lge.com>
Date: Mon, 11 Sep 2017 18:24:56 -0700
Subject: [PATCH] Patch permissions issue with drm clients

:Release Notes:
Fixed issue regarding unable to launch webapps if avoutputd started
before surface manager.

:Detailed Notes:

This patch allows a second service to acquire drm master status so
it can authenticate legacy wayland clients which rely on magic token
exchange for gpu access. Newer clients supposedly open render nodes
and do not need to be authenticated.

:Testing Performed:
Tested that apps were launched after changing the startup sequence.

:QA Notes:

:Issues Addressed:
[PLAT-45032] Investigate app launching issue when avoutputd is
started before surface manager
---
 drivers/gpu/drm/drm_auth.c |  5 +++--
 drivers/gpu/drm/drm_drv.c  | 13 +++++++++++--
 2 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/drm_auth.c b/drivers/gpu/drm/drm_auth.c
index 50d0baa..cfe7dc1 100644
--- a/drivers/gpu/drm/drm_auth.c
+++ b/drivers/gpu/drm/drm_auth.c
@@ -79,15 +79,16 @@ int drm_authmagic(struct drm_device *dev, void *data,
 	struct drm_auth *auth = data;
 	struct drm_file *file;
 
-	DRM_DEBUG("%u\n", auth->magic);
+	DRM_DEBUG("magic: %l\n", auth->magic);
 
 	mutex_lock(&dev->struct_mutex);
 	file = idr_find(&file_priv->master->magic_map, auth->magic);
 	if (file) {
+		DRM_DEBUG("found file associated with magic");
 		file->authenticated = 1;
 		idr_replace(&file_priv->master->magic_map, NULL, auth->magic);
 	}
 	mutex_unlock(&dev->struct_mutex);
-
+	DRM_DEBUG("return %d", file ? 0 : -EINVAL);
 	return file ? 0 : -EINVAL;
 }
diff --git a/drivers/gpu/drm/drm_drv.c b/drivers/gpu/drm/drm_drv.c
index 7dd6728..7b3d454 100644
--- a/drivers/gpu/drm/drm_drv.c
+++ b/drivers/gpu/drm/drm_drv.c
@@ -150,11 +150,18 @@ int drm_setmaster_ioctl(struct drm_device *dev, void *data,
 	if (file_priv->is_master)
 		goto out_unlock;
 
+	/*
+	Comment out check for master here, because we need multiple 
+	components(avoutput, surface-manger/compositor to have priviliges
+	of master and authenticated = true. Commenting out this section allows 
+	surface manager to get a list of clients for wayland/drm auth magic
+	handshake. If and when wayland clients start using render nodes this
+	change will not be necessary.
 	if (file_priv->minor->master) {
 		ret = -EINVAL;
 		goto out_unlock;
-	}
-
+	}*/
+	
 	if (!file_priv->master) {
 		ret = -EINVAL;
 		goto out_unlock;
@@ -167,11 +174,13 @@ int drm_setmaster_ioctl(struct drm_device *dev, void *data,
 
 	file_priv->minor->master = drm_master_get(file_priv->master);
 	file_priv->is_master = 1;
+	file_priv->authenticated = 1;
 	if (dev->driver->master_set) {
 		ret = dev->driver->master_set(dev, file_priv, false);
 		if (unlikely(ret != 0)) {
 			file_priv->is_master = 0;
 			drm_master_put(&file_priv->minor->master);
+			DRM_DEBUG ("set new drm_master \n");
 		}
 	}
 
-- 
1.9.1

