From ea194c07bc48a06618bd7108b8f57e91edd518b7 Mon Sep 17 00:00:00 2001
From: Jani Hautakangas <jani.hautakangas@lge.com>
Date: Thu, 5 Jun 2014 02:04:27 +0300
Subject: [PATCH] Expose new QSystemSemaphore resetOwner API

Upstream-Status: Not Applicable at the moment. Can be upstreamed in
future  if when we have time.

Change-Id: I6d4d616d91f0c378c14f9165725cbcb406555d6c
---
 src/corelib/kernel/qsystemsemaphore.h        |  4 ++++
 src/corelib/kernel/qsystemsemaphore_unix.cpp | 14 ++++++++++++++
 2 files changed, 18 insertions(+)

diff --git a/src/corelib/kernel/qsystemsemaphore.h b/src/corelib/kernel/qsystemsemaphore.h
index 10e5c1b..e90f9b8 100644
--- a/src/corelib/kernel/qsystemsemaphore.h
+++ b/src/corelib/kernel/qsystemsemaphore.h
@@ -77,6 +77,10 @@ public:
     SystemSemaphoreError error() const;
     QString errorString() const;
 
+#if defined(Q_OS_LINUX)
+    bool resetOwner(uid_t uid, gid_t gid);
+#endif
+
 private:
     Q_DISABLE_COPY(QSystemSemaphore)
     QScopedPointer<QSystemSemaphorePrivate> d;
diff --git a/src/corelib/kernel/qsystemsemaphore_unix.cpp b/src/corelib/kernel/qsystemsemaphore_unix.cpp
index d1ec39e..cf92bee 100644
--- a/src/corelib/kernel/qsystemsemaphore_unix.cpp
+++ b/src/corelib/kernel/qsystemsemaphore_unix.cpp
@@ -92,6 +92,20 @@ void QSystemSemaphorePrivate::setErrorString(const QString &function)
     }
 }
 
+bool QSystemSemaphore::resetOwner(uid_t uid, gid_t gid)
+{
+    struct semid_ds status;
+    status.sem_perm.uid = uid;
+    status.sem_perm.gid = gid;
+    status.sem_perm.mode = 0600;
+    if (-1 == semctl(d->semaphore, 0, IPC_SET, &status)) {
+         d->setErrorString(QLatin1String("QSystemSemaphore::resetOwner"));
+        return false;
+    }
+    return true;
+}
+
+
 QT_END_NAMESPACE
 
 #endif // QT_NO_SYSTEMSEMAPHORE
