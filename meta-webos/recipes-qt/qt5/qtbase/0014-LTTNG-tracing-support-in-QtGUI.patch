From 5f1f7d5385e2f342c450c4134b900bb46d48afbf Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jos=C3=A9=20Dapena=20Paz?= <jdapena@igalia.com>
Date: Fri, 13 Jun 2014 18:48:49 +0200
Subject: [PATCH] LTTNG tracing support in QtGUI

:Release Notes:
LTTNG tracing support in QtGUI, with image processing tracepoints.

:Detailed Notes:
Added LTTNG build detection support.

Added LTTNG tracing for QtGUI.

Added tracepoints for:
* QImage and QPixmap copy and transform operations.
* OpenGL paint engine texture cache texture upload
* OpenGL paint engine draw texture

:Testing Performed:

:QA Notes:

:Issues Addressed:
[BHV-10150] Update sprint 1 lttng analysis with new image decoder tracepoints
[BHV-6572] LSM animations may stall during app launch (was: Double swipe stalls while loading apps)

Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>

Change-Id: I03150d6ff80cbbcd787133d75854715cb81b5571
---
 src/gui/image/qimage.cpp                    | 15 +++++++++++++++
 src/gui/image/qpixmap.cpp                   |  8 ++++++++
 src/gui/opengl/qopenglframebufferobject.cpp |  3 +++
 src/gui/opengl/qopenglpaintengine.cpp       |  4 ++++
 src/gui/opengl/qopengltexturecache.cpp      |  3 +++
 5 files changed, 33 insertions(+)

diff --git a/src/gui/image/qimage.cpp b/src/gui/image/qimage.cpp
index 7fcae12cbd..585e06ee70 100644
--- a/src/gui/image/qimage.cpp
+++ b/src/gui/image/qimage.cpp
@@ -66,6 +66,8 @@
 #include <private/qimage_p.h>
 #include <private/qfont_p.h>
 
+#include <qtgui_tracepoints_p.h>
+
 QT_BEGIN_NAMESPACE
 
 static inline bool isLocked(QImageData *data)
@@ -120,6 +122,8 @@ QImageData * QImageData::create(const QSize &size, QImage::Format format)
     if (!size.isValid() || format == QImage::Format_Invalid)
         return 0;                                // invalid parameter(s)
 
+    Q_TRACE(qimagedata_create_entry);
+
     uint width = size.width();
     uint height = size.height();
     uint depth = qt_depthForFormat(format);
@@ -1130,6 +1134,7 @@ static void copyMetadata(QImageData *dst, const QImageData *src)
 */
 QImage QImage::copy(const QRect& r) const
 {
+    Q_TRACE(qimage_copy_entry);
     if (!d)
         return QImage();
 
@@ -2693,6 +2698,8 @@ QImage QImage::scaled(const QSize& s, Qt::AspectRatioMode aspectMode, Qt::Transf
     if (newSize == size())
         return *this;
 
+    Q_TRACE(qimage_scaled);
+
     QTransform wm = QTransform::fromScale((qreal)newSize.width() / width(), (qreal)newSize.height() / height());
     QImage img = transformed(wm, mode);
     return img;
@@ -2721,6 +2728,8 @@ QImage QImage::scaledToWidth(int w, Qt::TransformationMode mode) const
     if (w <= 0)
         return QImage();
 
+    Q_TRACE(qimage_scaledtowidth_entry);
+
     qreal factor = (qreal) w / width();
     QTransform wm = QTransform::fromScale(factor, factor);
     return transformed(wm, mode);
@@ -2749,6 +2758,8 @@ QImage QImage::scaledToHeight(int h, Qt::TransformationMode mode) const
     if (h <= 0)
         return QImage();
 
+    Q_TRACE(qimage_scaled_to_height_entry);;
+
     qreal factor = (qreal) h / height();
     QTransform wm = QTransform::fromScale(factor, factor);
     return transformed(wm, mode);
@@ -3248,6 +3259,8 @@ QImage QImage::rgbSwapped_helper() const
     if (isNull())
         return *this;
 
+    Q_TRACE(qimage_rgbswapped_helper_entry);
+
     QImage res;
 
     switch (d->format) {
@@ -4628,6 +4641,8 @@ QImage QImage::transformed(const QTransform &matrix, Qt::TransformationMode mode
     if (!d)
         return QImage();
 
+    Q_TRACE(qimage_transformed_entry);
+
     // source image data
     int ws = width();
     int hs = height();
diff --git a/src/gui/image/qpixmap.cpp b/src/gui/image/qpixmap.cpp
index 1ea503a268..1a1bbdfa9b 100644
--- a/src/gui/image/qpixmap.cpp
+++ b/src/gui/image/qpixmap.cpp
@@ -66,6 +66,8 @@
 #include "qpixmap_raster_p.h"
 #include "private/qhexstring_p.h"
 
+#include <qtgui_tracepoints_p.h>
+
 QT_BEGIN_NAMESPACE
 
 static bool qt_pixmap_thread_test()
@@ -1124,6 +1126,8 @@ QPixmap QPixmap::scaled(const QSize& s, Qt::AspectRatioMode aspectMode, Qt::Tran
     if (newSize == size())
         return *this;
 
+    Q_TRACE(qpixmap_scaled);
+
     QTransform wm = QTransform::fromScale((qreal)newSize.width() / width(),
                                           (qreal)newSize.height() / height());
     QPixmap pix = transformed(wm, mode);
@@ -1153,6 +1157,8 @@ QPixmap QPixmap::scaledToWidth(int w, Qt::TransformationMode mode) const
     if (w <= 0)
         return QPixmap();
 
+    Q_TRACE(qpixmap_scaledtowidth_entry);
+
     qreal factor = (qreal) w / width();
     QTransform wm = QTransform::fromScale(factor, factor);
     return transformed(wm, mode);
@@ -1181,6 +1187,8 @@ QPixmap QPixmap::scaledToHeight(int h, Qt::TransformationMode mode) const
     if (h <= 0)
         return QPixmap();
 
+    Q_TRACE(qpixmap_scaledtoheight_entry);
+
     qreal factor = (qreal) h / height();
     QTransform wm = QTransform::fromScale(factor, factor);
     return transformed(wm, mode);
diff --git a/src/gui/opengl/qopenglframebufferobject.cpp b/src/gui/opengl/qopenglframebufferobject.cpp
index 83bc568ba7..06e04132da 100644
--- a/src/gui/opengl/qopenglframebufferobject.cpp
+++ b/src/gui/opengl/qopenglframebufferobject.cpp
@@ -50,6 +50,8 @@
 #include <qimage.h>
 #include <QtCore/qbytearray.h>
 
+#include <qtgui_tracepoints_p.h>
+
 QT_BEGIN_NAMESPACE
 
 #ifndef QT_NO_DEBUG
@@ -455,6 +457,7 @@ void QOpenGLFramebufferObjectPrivate::init(QOpenGLFramebufferObject *, const QSi
                                            GLenum texture_target, GLenum internal_format,
                                            GLint samples, bool mipmap)
 {
+    Q_TRACE(qopenglframebufferobjectprivate_init_entry);
     QOpenGLContext *ctx = QOpenGLContext::currentContext();
 
     funcs.initializeOpenGLFunctions();
diff --git a/src/gui/opengl/qopenglpaintengine.cpp b/src/gui/opengl/qopenglpaintengine.cpp
index 192fec2789..5796901ecd 100644
--- a/src/gui/opengl/qopenglpaintengine.cpp
+++ b/src/gui/opengl/qopenglpaintengine.cpp
@@ -87,6 +87,8 @@
 
 #include <QDebug>
 
+#include <qtgui_tracepoints_p.h>
+
 QT_BEGIN_NAMESPACE
 
 
@@ -560,6 +562,8 @@ static inline void setCoords(GLfloat *coords, const QOpenGLRect &rect)
 
 void QOpenGL2PaintEngineExPrivate::drawTexture(const QOpenGLRect& dest, const QOpenGLRect& src, const QSize &textureSize, bool opaque, bool pattern)
 {
+    Q_TRACE(qopengl2paintengineexprivate_drawtexture_entry);
+
     // Setup for texture drawing
     currentBrush = noBrush;
 
diff --git a/src/gui/opengl/qopengltexturecache.cpp b/src/gui/opengl/qopengltexturecache.cpp
index 27aa8db33a..36efd4642b 100644
--- a/src/gui/opengl/qopengltexturecache.cpp
+++ b/src/gui/opengl/qopengltexturecache.cpp
@@ -45,6 +45,8 @@
 #include <private/qimagepixmapcleanuphooks_p.h>
 #include <qpa/qplatformpixmap.h>
 
+#include <qtgui_tracepoints_p.h>
+
 QT_BEGIN_NAMESPACE
 
 #ifndef GL_RED
@@ -190,6 +192,7 @@ GLuint QOpenGLTextureCache::bindTexture(QOpenGLContext *context, const QImage &i
 
 GLuint QOpenGLTextureCache::bindTexture(QOpenGLContext *context, qint64 key, const QImage &image, BindOptions options)
 {
+    Q_TRACE(qopengltexturecache_bindtexture_entry);
     GLuint id;
     QOpenGLFunctions *funcs = context->functions();
     funcs->glGenTextures(1, &id);
