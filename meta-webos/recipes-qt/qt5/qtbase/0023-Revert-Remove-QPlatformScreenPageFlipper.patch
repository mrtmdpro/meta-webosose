From 688e51f07db48b1997eab12775f016a25898a7bf Mon Sep 17 00:00:00 2001
From: Elvis Lee <kwangwoong.lee@lge.com>
Date: Thu, 2 Apr 2015 14:35:17 +0900
Subject: [PATCH] Revert "Remove QPlatformScreenPageFlipper."

:Release Notes:
Revert "Remove QPlatformScreenPageFlipper."

:Detailed Notes:
This reverts commit 97cd20b2a02998e610d97e1907c23ad420f58502.
QPlatformScreenPageFlipper."
https://codereview.qt-project.org/#/c/92372/

This is to support stereoscope which uses direct rendering
framework.

:Issues Addressed:
[DRD-4691] Backport page flipper and make direct rendering work again

Upstream-Status: do not apply (local backward compatibility)
---
 src/gui/kernel/kernel.pri                          |   2 +
 src/gui/kernel/qplatformscreen.cpp                 |   9 ++
 src/gui/kernel/qplatformscreen.h                   |   2 +
 src/gui/kernel/qplatformscreenpageflipper.cpp      | 121 +++++++++++++++++++++
 src/gui/kernel/qplatformscreenpageflipper.h        |  92 ++++++++++++++++
 .../platforms/winrt/qwinrteventdispatcher.cpp      |   1 +
 6 files changed, 227 insertions(+)
 create mode 100644 src/gui/kernel/qplatformscreenpageflipper.cpp
 create mode 100644 src/gui/kernel/qplatformscreenpageflipper.h

diff --git a/src/gui/kernel/kernel.pri b/src/gui/kernel/kernel.pri
index a60c56b..524c41a 100644
--- a/src/gui/kernel/kernel.pri
+++ b/src/gui/kernel/kernel.pri
@@ -66,6 +66,7 @@ HEADERS += \
         kernel/qplatformsharedgraphicscache.h \
         kernel/qplatformdialoghelper.h \
         kernel/qplatformservices.h \
+        kernel/qplatformscreenpageflipper.h \
         kernel/qplatformsystemtrayicon.h \
         kernel/qplatformsessionmanager.h \
         kernel/qpixelformat.h \
@@ -125,6 +126,7 @@ SOURCES += \
         kernel/qplatformsharedgraphicscache.cpp \
         kernel/qplatformdialoghelper.cpp \
         kernel/qplatformservices.cpp \
+        kernel/qplatformscreenpageflipper.cpp \
         kernel/qplatformsystemtrayicon.cpp \
         kernel/qplatformsessionmanager.cpp \
         kernel/qplatformmenu.cpp \
diff --git a/src/gui/kernel/qplatformscreen.cpp b/src/gui/kernel/qplatformscreen.cpp
index 3ec7a4c..0e2292a 100644
--- a/src/gui/kernel/qplatformscreen.cpp
+++ b/src/gui/kernel/qplatformscreen.cpp
@@ -308,6 +308,15 @@ QPlatformScreen * QPlatformScreen::platformScreenForWindow(const QWindow *window
 */
 
 /*!
+  Implemented in subclasses to return a page flipper object for the screen, or 0 if the
+  hardware does not support page flipping. The default implementation returns 0.
+ */
+QPlatformScreenPageFlipper *QPlatformScreen::pageFlipper() const
+{
+    return 0;
+}
+
+/*!
     Reimplement this function in subclass to return the cursor of the screen.
 
     The default implementation returns 0.
diff --git a/src/gui/kernel/qplatformscreen.h b/src/gui/kernel/qplatformscreen.h
index b32f9cf..5767fc6 100644
--- a/src/gui/kernel/qplatformscreen.h
+++ b/src/gui/kernel/qplatformscreen.h
@@ -63,6 +63,7 @@ class QPlatformOpenGLContext;
 class QPlatformScreenPrivate;
 class QPlatformWindow;
 class QPlatformCursor;
+class QPlatformScreenPageFlipper;
 class QScreen;
 class QSurfaceFormat;
 
@@ -123,6 +124,7 @@ public:
 
     virtual QString name() const { return QString(); }
 
+    virtual QPlatformScreenPageFlipper *pageFlipper() const;
     virtual QPlatformCursor *cursor() const;
     virtual SubpixelAntialiasingType subpixelAntialiasingTypeHint() const;
 
diff --git a/src/gui/kernel/qplatformscreenpageflipper.cpp b/src/gui/kernel/qplatformscreenpageflipper.cpp
new file mode 100644
index 0000000..8665adc
--- /dev/null
+++ b/src/gui/kernel/qplatformscreenpageflipper.cpp
@@ -0,0 +1,121 @@
+/****************************************************************************
+**
+** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/legal
+**
+** This file is part of the QtGui module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and Digia.  For licensing terms and
+** conditions see http://qt.digia.com/licensing.  For further information
+** use the contact form at http://qt.digia.com/contact-us.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Digia gives you certain additional
+** rights.  These rights are described in the Digia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU
+** General Public License version 3.0 as published by the Free Software
+** Foundation and appearing in the file LICENSE.GPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU General Public License version 3.0 requirements will be
+** met: http://www.gnu.org/copyleft/gpl.html.
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include "qplatformscreenpageflipper.h"
+
+QT_BEGIN_NAMESPACE
+
+/*!
+    \class QPlatformScreenBuffer
+    \since 5.0
+    \internal
+    \preliminary
+    \ingroup qpa
+
+    \brief The QPlatformScreenBuffer class provides an abstraction for screen buffers.
+ */
+QPlatformScreenBuffer::QPlatformScreenBuffer()
+    : m_destroyed(false)
+    , m_ready(true)
+{
+
+}
+
+QPlatformScreenBuffer::~QPlatformScreenBuffer()
+{
+
+}
+
+bool QPlatformScreenBuffer::isDestroyed() const
+{
+    return m_destroyed;
+}
+
+bool QPlatformScreenBuffer::isReady() const
+{
+    return m_ready;
+}
+
+void QPlatformScreenBuffer::aboutToBeDisplayed()
+{
+}
+
+void QPlatformScreenBuffer::displayed()
+{
+}
+
+
+/*!
+    \class QPlatformScreenPageFlipper
+    \since 5.0
+    \internal
+    \preliminary
+    \ingroup qpa
+
+    \brief The QPlatformScreenPageFlipper class provides an abstract interface for display buffer swapping
+
+    Implement the displayBuffer() function to initiate a buffer swap. The
+    bufferDisplayed() signal should be emitted once the buffer is actually displayed on
+    the screen. The bufferReleased() signal should be emitted when the buffer data is no
+    longer owned by the display hardware.
+*/
+
+QPlatformScreenPageFlipper::QPlatformScreenPageFlipper(QObject *parent)
+    :QObject(parent)
+{
+
+}
+
+/*!
+    \fn bool QPlatformScreenPageFlipper::displayBuffer(QPlatformScreenBuffer *buffer)
+
+    Implemented in subclasses to display \a buffer directly on the screen. Returns \c true
+    if it is possible to display the buffer, and \c false if the buffer cannot be displayed.
+
+    If this function returns \c true, the buffer must not be modified or destroyed before the
+    bufferReleased() signal is emitted.  The signal bufferDisplayed() is emitted when the buffer
+    is displayed on the screen. The two signals may be emitted in either order.
+
+    This function is allowed to block.
+*/
+
+QT_END_NAMESPACE
+
diff --git a/src/gui/kernel/qplatformscreenpageflipper.h b/src/gui/kernel/qplatformscreenpageflipper.h
new file mode 100644
index 0000000..232e37d
--- /dev/null
+++ b/src/gui/kernel/qplatformscreenpageflipper.h
@@ -0,0 +1,92 @@
+/****************************************************************************
+**
+** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/legal
+**
+** This file is part of the QtGui module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** Commercial License Usage
+** Licensees holding valid commercial Qt licenses may use this file in
+** accordance with the commercial license agreement provided with the
+** Software or, alternatively, in accordance with the terms contained in
+** a written agreement between you and Digia.  For licensing terms and
+** conditions see http://qt.digia.com/licensing.  For further information
+** use the contact form at http://qt.digia.com/contact-us.
+**
+** GNU Lesser General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU Lesser
+** General Public License version 2.1 as published by the Free Software
+** Foundation and appearing in the file LICENSE.LGPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU Lesser General Public License version 2.1 requirements
+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Digia gives you certain additional
+** rights.  These rights are described in the Digia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU
+** General Public License version 3.0 as published by the Free Software
+** Foundation and appearing in the file LICENSE.GPL included in the
+** packaging of this file.  Please review the following information to
+** ensure the GNU General Public License version 3.0 requirements will be
+** met: http://www.gnu.org/copyleft/gpl.html.
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QPLATFORMSCREENPAGEFLIPPER_H
+#define QPLATFORMSCREENPAGEFLIPPER_H
+
+//
+//  W A R N I N G
+//  -------------
+//
+// This file is part of the QPA API and is not meant to be used
+// in applications. Usage of this API may make your code
+// source and binary incompatible with future versions of Qt.
+//
+
+#include <QtCore/QObject>
+
+QT_BEGIN_NAMESPACE
+
+class Q_GUI_EXPORT QPlatformScreenBuffer {
+public:
+    QPlatformScreenBuffer();
+    virtual ~QPlatformScreenBuffer();
+
+    bool isDestroyed() const;
+    bool isReady() const;
+
+    virtual void aboutToBeDisplayed();
+    virtual void displayed();
+    virtual void release() = 0;
+
+    virtual void *handle() const = 0;
+
+protected:
+    bool m_destroyed;
+    bool m_ready;
+};
+
+class Q_GUI_EXPORT QPlatformScreenPageFlipper : public QObject
+{
+    Q_OBJECT
+public:
+    explicit QPlatformScreenPageFlipper(QObject *parent = 0);
+
+    virtual bool displayBuffer(QPlatformScreenBuffer *) = 0;
+
+Q_SIGNALS:
+    void bufferDisplayed(QPlatformScreenBuffer *);
+    void bufferReleased(QPlatformScreenBuffer *);
+};
+
+QT_END_NAMESPACE
+
+#endif // QPLATFORMSCREENPAGEFLIPPER_H
diff --git a/src/plugins/platforms/winrt/qwinrteventdispatcher.cpp b/src/plugins/platforms/winrt/qwinrteventdispatcher.cpp
index 716681c..df8ec23 100644
--- a/src/plugins/platforms/winrt/qwinrteventdispatcher.cpp
+++ b/src/plugins/platforms/winrt/qwinrteventdispatcher.cpp
@@ -37,6 +37,7 @@
 #include "qwinrteventdispatcher.h"
 #include <qpa/qwindowsysteminterface.h>
 #include <qpa/qplatformscreen.h>
+#include <qpa/qplatformscreenpageflipper.h>
 #include <QtCore/QThread>
 #include <QtGui/QGuiApplication>
 
