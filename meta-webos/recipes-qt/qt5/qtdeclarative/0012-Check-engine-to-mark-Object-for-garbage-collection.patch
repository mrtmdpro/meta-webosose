From 69d413cb8e33595fc900ebac1c8386e1624f9911 Mon Sep 17 00:00:00 2001
From: Elvis Lee <kwangwoong.lee@lge.com>
Date: Tue, 16 May 2017 15:04:32 +0900
Subject: [PATCH] Check engine to mark Object for garbage collection

:Release Notes:
Avoid marking for the garbage collection if an Object was created from
a different engine.

:Detailed Notes:
If an Object is marked by an engine which is different from the one that
created that Object, some Objects can be sweeped out unintentionally by
the garbage collector. This fix prevents Objects from being marked by
other engines.

:Testing Performed:
Ran the stress test for 15 hours and confirmed there was no crash from
the V4 engine.

:QA Notes:

:Issues Addressed:
[PLAT-40500] surface-manager crashes -- various scenarios

Change-Id: I8ff05a5918c19427179be997d0bd29d185c7a4c3
Upstream-Status: Pending
---
 src/qml/jsruntime/qv4engine.cpp | 8 +++++---
 src/qml/jsruntime/qv4engine_p.h | 9 +++++----
 2 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/src/qml/jsruntime/qv4engine.cpp b/src/qml/jsruntime/qv4engine.cpp
index accf58d..ae8b624 100644
--- a/src/qml/jsruntime/qv4engine.cpp
+++ b/src/qml/jsruntime/qv4engine.cpp
@@ -1574,10 +1574,12 @@ QV4::ReturnedValue ExecutionEngine::metaTypeToJS(int type, const void *data)
     return 0;
 }
 
-void ExecutionEngine::assertObjectBelongsToEngine(const Heap::Base &baseObject)
+bool ExecutionEngine::assertObjectBelongsToEngine(const Heap::Base &baseObject)
 {
-    Q_ASSERT(!baseObject.vtable()->isObject || static_cast<const Heap::Object&>(baseObject).internalClass->engine == this);
-    Q_UNUSED(baseObject);
+    if (!baseObject.vtable()->isObject || static_cast<const Heap::Object&>(baseObject).internalClass->engine == this)
+        return true;
+
+    return false;
 }
 
 void ExecutionEngine::failStackLimitCheck(Scope &scope)
diff --git a/src/qml/jsruntime/qv4engine_p.h b/src/qml/jsruntime/qv4engine_p.h
index fee06eb..270361b 100644
--- a/src/qml/jsruntime/qv4engine_p.h
+++ b/src/qml/jsruntime/qv4engine_p.h
@@ -459,7 +459,7 @@ public:
     bool metaTypeFromJS(const Value *value, int type, void *data);
     QV4::ReturnedValue metaTypeToJS(int type, const void *data);
 
-    void assertObjectBelongsToEngine(const Heap::Base &baseObject);
+    bool assertObjectBelongsToEngine(const Heap::Base &baseObject);
 
     bool checkStackLimits(Scope &scope);
 
@@ -524,9 +524,10 @@ void Heap::Base::mark(QV4::ExecutionEngine *engine)
     Q_ASSERT(inUse());
     if (isMarked())
         return;
-#ifndef QT_NO_DEBUG
-    engine->assertObjectBelongsToEngine(*this);
-#endif
+
+    if (!engine->assertObjectBelongsToEngine(*this))
+        return;
+
     setMarkBit();
     engine->pushForGC(this);
 }
