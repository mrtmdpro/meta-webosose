From 15d8c599dde3b3a88f5900063e5aeac5cb7676b3 Mon Sep 17 00:00:00 2001
From: Ulf Hermann <ulf.hermann@qt.io>
Date: Thu, 23 Jan 2020 11:01:33 +0100
Subject: [PATCH] ArrayPrototype::method_filter: Check for exception after
 callback

If there was an exception we cannot assume the returned value holds
anything sensible. Also, we should immediately return.

(cherry-picked from commit 31d05c6734057bed56ac783d4f9d03d3c2ecbcbb)
Fixes: QTBUG-81581
Change-Id: I822c204c476e05d6de78124b66ab2f939ca38ffd
Reviewed-by: Fabian Kosmale <fabian.kosmale@qt.io>
Reviewed-by: Lars Knoll <lars.knoll@qt.io>
Upstream-Status: Backported [https://codereview.qt-project.org/c/qt/qtdeclarative/+/296610]
---
 src/qml/jsruntime/qv4arrayobject.cpp | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/qml/jsruntime/qv4arrayobject.cpp b/src/qml/jsruntime/qv4arrayobject.cpp
index 27fc278506..b67eceb7f7 100644
--- a/src/qml/jsruntime/qv4arrayobject.cpp
+++ b/src/qml/jsruntime/qv4arrayobject.cpp
@@ -1383,6 +1383,7 @@ ReturnedValue ArrayPrototype::method_filter(const FunctionObject *b, const Value
         arguments[1] = Value::fromDouble(k);
         arguments[2] = instance;
         selected = callback->call(that, arguments, 3);
+        CHECK_EXCEPTION();
         if (selected->toBoolean()) {
             a->arraySet(to, arguments[0]);
             ++to;
