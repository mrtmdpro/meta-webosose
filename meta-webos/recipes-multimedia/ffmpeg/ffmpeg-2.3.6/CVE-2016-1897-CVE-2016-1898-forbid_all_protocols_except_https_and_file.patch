From 2fd285cb1d1ab67c5d1cf2446bc2b936a660dd89 Mon Sep 17 00:00:00 2001
From: B H V Rama Krishna <rama.krishna@lge.com>
Date: Wed, 21 Dec 2016 12:37:22 +0530
Subject: [PATCH] Forbid_all_protocols_except_https_and_file

[CVE-2016-1898]
FFmpeg 2.x allows remote attackers to conduct
cross-origin attacks
and read arbitrary files by using the subfile protocol in an HTTP
Live Streaming (HLS) M3U8 file, leading to an external HTTP request
in which the URL string contains an arbitrary line of a local file.

[CVE-2016-1897]
FFmpeg 2.x allows remote attackers to conduct cross-origin attacks
and read arbitrary files by using the concat protocol in an HTTP
Live Streaming (HLS) M3U8 file, leading to an external HTTP request
in which the URL string contains the first line of a local file.

The patch is to forbid all protocols except http(s) & file.

---
 libavformat/hls.c | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/libavformat/hls.c b/libavformat/hls.c
index 3897723..98005a0 100644
--- a/libavformat/hls.c
+++ b/libavformat/hls.c
@@ -900,6 +900,24 @@ static void intercept_id3(struct playlist *pls, uint8_t *buf,
         pls->is_id3_timestamped = (pls->id3_mpegts_timestamp != AV_NOPTS_VALUE);
 }
 
+static int check_url(const char *url)
+{
+    const char *proto_name = avio_find_protocol_name(url);
+
+    if (!proto_name)
+        return AVERROR_INVALIDDATA;
+
+    if (!av_strstart(proto_name, "http", NULL) && !av_strstart(proto_name, "file", NULL))
+        return AVERROR_INVALIDDATA;
+
+    if (!strncmp(proto_name, url, strlen(proto_name)) && url[strlen(proto_name)] == ':')
+        return 0;
+    else if (strcmp(proto_name, "file") || !(strncmp(url, "file,", 5)))
+        return AVERROR_INVALIDDATA;
+
+    return 0;
+}
+
 static int open_input(HLSContext *c, struct playlist *pls)
 {
     AVDictionary *opts = NULL;
@@ -933,6 +951,10 @@ static int open_input(HLSContext *c, struct playlist *pls)
            seg->url, seg->url_offset, pls->index);
 
     if (seg->key_type == KEY_NONE) {
+        ret = check_url(seg->url);
+        if (ret < 0)
+            goto cleanup;
+
         ret = ffurl_open(&pls->input, seg->url, AVIO_FLAG_READ,
                           &pls->parent->interrupt_callback, &opts);
 
@@ -940,6 +962,9 @@ static int open_input(HLSContext *c, struct playlist *pls)
         char iv[33], key[33], url[MAX_URL_SIZE];
         if (strcmp(seg->key, pls->key_url)) {
             URLContext *uc;
+            ret = check_url(seg->url);
+            if (ret < 0)
+                goto cleanup;
             if (ffurl_open(&uc, seg->key, AVIO_FLAG_READ,
                            &pls->parent->interrupt_callback, &opts2) == 0) {
                 if (ffurl_read_complete(uc, pls->key, sizeof(pls->key))
-- 
1.9.1

