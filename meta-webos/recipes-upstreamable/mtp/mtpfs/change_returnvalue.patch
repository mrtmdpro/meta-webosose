diff -urN mtpfs-1.1/mtpfs.c mtpfs-1.1-new/mtpfs.c
--- mtpfs-1.1/mtpfs.c	2013-11-21 19:36:30.026382752 +0900
+++ mtpfs-1.1-new/mtpfs.c	2013-11-21 19:51:11.163467332 +0900
@@ -1348,13 +1348,13 @@
     switch(err) {
     case LIBMTP_ERROR_NO_DEVICE_ATTACHED:
         fprintf(stdout, "   No raw devices found.\n");
-        return 0;
+        return -1;
     case LIBMTP_ERROR_CONNECTING:
         fprintf(stderr, "Detect: There has been an error connecting. Exiting\n");
-        return 1;
+        return -1;
     case LIBMTP_ERROR_MEMORY_ALLOCATION:
         fprintf(stderr, "Detect: Encountered a Memory Allocation Error. Exiting\n");
-        return 1;
+        return -1;
     case LIBMTP_ERROR_NONE:
         {
             int i;
@@ -1383,14 +1383,14 @@
     case LIBMTP_ERROR_GENERAL:
     default:
         fprintf(stderr, "Unknown connection error.\n");
-        return 1;
+        return -1;
     }
 
     fprintf(stdout, "Attempting to connect device\n");
     device = LIBMTP_Open_Raw_Device(&rawdevices[i]);
     if (device == NULL) {
         fprintf(stderr, "Unable to open raw device %d\n", i);
-        return 1;
+        return -1;
     }
 
     LIBMTP_Dump_Errorstack(device);
@@ -1412,7 +1412,7 @@
         fprintf(stdout,"LIBMTP_Get_Storage() failed:%d\n",ret);
         LIBMTP_Dump_Errorstack(device);
         LIBMTP_Clear_Errorstack(device);
-        return 1;
+        return -1;
     }
 
     /* Check if multiple storage areas */
